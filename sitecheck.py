import requests as req
import time, sys 

class SiteCheck:
    _other, _2xx, _3xx, _4xx, _5xx = [], [], [], [], []
    sys.stdout = open("INFO_"+str(sys.argv[1]), "w")
    url  = None
    
    def __init__(self, file):
        self.readFile(file)
    
    def readFile(self, file):
        with open(file, "r") as f:
            SiteCheck.url = list(map(lambda x: x.strip(), f.readlines()))
            SiteCheck.url = list(filter(None, SiteCheck.url))

    def checkUrl(self):
        headers = ["#", "Status Code", "URL", "Redirect ?"]
        print(("{:^3} {:^11} {:^62} {:^41}").format(*headers))
        
        for num, site in enumerate(SiteCheck.url):
            order = "%.2d"%(num + 1)
            if "http" not in site:
                site = "http://"+site
            try:
                r = req.get(site, allow_redirects=False, timeout=5)
                url = r.url
                scode = r.status_code
                redirects = r.headers.get("Location", "")
                self.statusCode(scode, url, order, redirects)
                time.sleep(0.3)

            except KeyboardInterrupt:
                print("QUITTING... ")
                quit()                                                    
            except:
                print("{order:<5} {error:<15} {url:<71} {redirect:<41}".format(order=str(order), redirect="None", error="ERROR", url=site))
                SiteCheck._other.append(site)

    def statusCode(self, scode, url, order, redirects):

        if  str(scode)[0] == "2":
            print("{order:<5} {scode:<15} {url:<71} {redirect:<41}".format(order=str(order), scode=str(scode), url=url, redirect=redirects))   
            SiteCheck._2xx.append(url)
        elif str(scode)[0] == "3":
            print("{order:<5} {scode:<15} {url:<71} {redirect:<41}".format(order=str(order), scode=str(scode), url=url, redirect=redirects))   
            SiteCheck._3xx.append(url)                                     
        elif str(scode)[0] == "4":
            print("{order:<5} {scode:<15} {url:<71} {redirect:<41}".format(order=str(order), scode=str(scode), url=url, redirect=redirects))   
            SiteCheck._4xx.append(url)                                     
        else:
            print("{order:<5} {scode:<15} {url:<71} {redirect:<41}".format(order=str(order), scode=str(scode), url=url, redirect=redirects))   
            SiteCheck._5xx.append(url)

    @classmethod
    def info(cls):
        print("\n", "="*30, "RESULT", "="*30)
        print("Other :\t",              len(cls._other))
        print("2xx :\t",     len(cls._2xx))
        print("3xx :\t",   len(cls._3xx))
        print("4xx :\t",    len(cls._4xx))
        print("5xx :\t",     len(cls._5xx))
        print("TOTAL URL : ",           len(cls.url))

urlList = SiteCheck(sys.argv[1])
urlList.checkUrl()
SiteCheck.info()